// Source code is decompiled from a .class file using FernFlower decompiler.
import java.util.Arrays;
import java.util.HashSet;
import java.util.Locale;
import java.util.Set;

public final class InputValidation {
   private static final Set<String> ALLOWED_CATEGORIES = new HashSet(Arrays.asList("food", "travel", "bills", "entertainment", "other"));

   private InputValidation() {
   }

   public static double parseAndValidateAmount(String var0) {
      if (var0 == null) {
         throw new IllegalArgumentException("Amount is required");
      } else {
         String var1 = var0.trim();
         if (var1.isEmpty()) {
            throw new IllegalArgumentException("Amount is required");
         } else {
            double var2;
            try {
               var2 = Double.parseDouble(var1);
            } catch (NumberFormatException var5) {
               throw new IllegalArgumentException("Amount must be a valid number", var5);
            }

            if (!(var2 <= 0.0) && !(var2 >= 1000.0)) {
               return var2;
            } else {
               throw new IllegalArgumentException("Amount must be > 0 and < 1000");
            }
         }
      }
   }

   public static String validateCategory(String var0) {
      if (var0 == null) {
         throw new IllegalArgumentException("Category is required");
      } else {
         String var1 = var0.trim().toLowerCase(Locale.ROOT);
         if (!ALLOWED_CATEGORIES.contains(var1)) {
            throw new IllegalArgumentException("Category must be one of: food, travel, bills, entertainment, other");
         } else {
            return var1;
         }
      }
   }
}
